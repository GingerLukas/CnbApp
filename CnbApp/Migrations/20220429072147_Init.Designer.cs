// <auto-generated />
using System;
using CnbApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CnbApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220429072147_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CnbApp.Data.Currency", b =>
                {
                    b.Property<string>("CurrencyId")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("CnbApp.Data.CurrencyData", b =>
                {
                    b.Property<string>("CurrencyDataId")
                        .HasColumnType("text");

                    b.Property<decimal>("Count")
                        .HasColumnType("numeric");

                    b.Property<string>("CurrencyId")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<DateTimeOffset>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("CurrencyDataId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("CurrencyDatas");
                });

            modelBuilder.Entity("CnbApp.Data.CurrencyData", b =>
                {
                    b.HasOne("CnbApp.Data.Currency", null)
                        .WithMany("Datas")
                        .HasForeignKey("CurrencyId");
                });

            modelBuilder.Entity("CnbApp.Data.Currency", b =>
                {
                    b.Navigation("Datas");
                });
#pragma warning restore 612, 618
        }
    }
}
